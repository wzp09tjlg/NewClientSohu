apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion '21.0.0'

    defaultConfig {
        applicationId "com.sina.home.testfor_newclient"
        minSdkVersion 17
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        UMENG {//官网
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "UMENG"]
        }
        baidu {//百度助手
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
        anzhuomarket {//安卓市场
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "anzhuomarket"]
        }
        jiuyao {//91
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "jiuyao"]
        }
        a360 {//360手机助手
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
        }
        anzhi {//安智
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "anzhi"]
        }
        xiaomi {//小米
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        wandoujia {//豌豆荚
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        google {//googleplay
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "google"]
        }
        weiboapp {//微博应用中心
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "weiboapp"]
        }
        //推广渠道
//        oppo {//oppo
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "oppo"]
//        }
//        yingyongbao {//yingyongbao
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
//        }
//        meizu {//meizu
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
//        }
//        huawei {//huawei
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
//        }
    }

    sourceSets {
        main {
//            manifest.srcFile 'AndroidManifest.xml'  //这里的几个文件引入 是 因为eclipse中的文件引入到android studio中来 文件夹位置不一致，所以这里需要声明下
//            java.srcDirs = ['src']
//            resources.srcDirs = ['src']
//            aidl.srcDirs = ['src']
//            renderscript.srcDirs = ['src']
//            res.srcDirs = ['res']
//            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']    // 这里是使用 eclispe 项目导入android studio中，引入os文件
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

 //useLibrary('org.apache.http.legacy') //android 6.0 不支持httpClient 但是在valloy 中低层还是使用的httpClient  这里是加载引用httpClient 相关文件
//    useLibrary 'org.apache.http.legacy'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:cardview-v7:21.0.0'
    compile 'com.android.support:recyclerview-v7:22.1.1'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.alibaba:fastjson:latest.integration'
}

def appendVersionName(variant, defaultConfig) {
    variant.outputs.each { output ->
        if (output.zipAlign) {
            def file = output.outputFile
            def fileName = file.name.replace("-release.apk", "-" + defaultConfig.versionName + "-release.apk")
            output.outputFile = new File(file.parent, fileName)
        }

        def file = output.packageApplication.outputFile
        def fileName = file.name.replace("-release.apk", "-" + defaultConfig.versionName + "-release.apk")
        output.packageApplication.outputFile = new File(file.parent, fileName)
    }
}